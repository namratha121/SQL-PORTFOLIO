--1.	Represent the “book_date” column in “yyyy-mmm-dd” format using Bookings table 
 select book_ref, to_char(book_date,'yyyy-MON-dd'), total_amount
from Bookings


--2.	Get the following columns in the exact same sequence.
 select b.ticket_no, b.boarding_no, b.seat_no, t.passenger_id, t.passenger_name
from boarding_passes b 
 join tickets t 
on t.ticket_no=b.ticket_no


--3.	Write a query to find the seat number which is least allocated among all the seats?

 select * from
(select seat_no, count(seat_no), rank() over(order by count(seat_no)) as rnk from boarding_passes
group by 1
order by 2)t1
where t1.rnk = 1

--4.	In the database, identify the month wise highest paying passenger name and passenger id.
select month, passenger_id, passenger_name, total_amount from
(select to_char(b.book_date,'mon-yy') as month, t.passenger_id, t.passenger_name , sum(b.total_amount) as total_amount,
rank() over(partition by to_char(b.book_date,'mon-yy') order by sum(b.total_amount) desc) as rnk
from bookings b join tickets t
on  b.book_ref = t.book_ref
group by 1,2,3
) t1
where t1.rnk =1



5.	In the database, identify the month wise least paying passenger name and passenger id?

Answer: select month, passenger_id, passenger_name, total_amount from
(select to_char(b.book_date,'mon-yy') as month, t.passenger_id, t.passenger_name , sum(b.total_amount) as total_amount,
rank() over(partition by to_char(b.book_date,'mon-yy') order by sum(b.total_amount) asc) as rnk
from bookings b join tickets t
on  b.book_ref = t.book_ref
group by 1,2,3
) t1
where t1.rnk =1


6.	Identify the travel details of non stop journeys  or return journeys (having more than 1 flight).
Expected Output: Passenger_id, passenger_name, ticket_number and flight count.

Answer:  select t.passenger_id, t.passenger_name, t.ticket_no, count(tf.flight_id) as flight_count
 from tickets t join ticket_flights tf 
 on t.ticket_no=tf.ticket_no
 group by 1,2,3
 having count(tf.flight_id)=1 or count(tf.flight_id)>1


7.	How many tickets are there without boarding passes?
Expected Output: just one number is required.

Answer:  select count(t.ticket_no) from tickets t left join boarding_passes b on
t.ticket_no = b.ticket_no
where b.ticket_no is null



8.	Identify details of the longest flight (using flights table)?
Expected Output: Flight number, departure airport, arrival airport, aircraft code and durations.

Answer:  select distinct(flight_no), departure_airport, arrival_airport, aircraft_code,  duration  from (
 select  distinct(flight_no), departure_airport, arrival_airport, aircraft_code, scheduled_arrival - scheduled_departure as duration 
 ,rank() over(order by scheduled_arrival - scheduled_departure desc ) as rnk
 from flights) t1
 where t1.rnk =1





9.	Identify details of all the morning flights (morning means between 6AM to 11 AM, using flights table)?
Expected output: flight_id, flight_number, scheduled_departure, scheduled_arrival and timings.

Answer: select  flight_id, flight_no, scheduled_departure, scheduled_arrival,
case when cast(scheduled_departure as time) >='06:00:00' and cast(scheduled_departure as time)<='11:00:00'
then 'morning' 
when cast(scheduled_departure as time)>='02:00:00' and cast(scheduled_departure as time)<'06:00:00'
then 'early morning'
else 'not morning'
end as timings
from flights
where cast(scheduled_departure as time) between '06:00:00' and '11:00:00'





10.	Identify the earliest morning flight available from every airport.
Expected output: flight_id, flight_number, scheduled_departure, scheduled_arrival, departure airport and timings.
Answer: select * from(
select  flight_id, flight_no, scheduled_departure, scheduled_arrival, departure_airport,
case when cast(scheduled_departure as time) >='06:00:00' and cast(scheduled_departure as time)<='11:00:00'
then 'morning' 
when cast(scheduled_departure as time)>='02:00:00' and cast(scheduled_departure as time)<'06:00:00'
then 'early morning'
else 'not morning'
